#include<iostream>
#include<vector>



using namespace std;


 int xorarr(vector<int> arr){
   int ans=0;
   for(int i=0;i<arr.size();i++){
     ans= ans^ arr[i];
   }
   
   return ans;
 }



int main(){
//  // vector create 
//   vector<int> arr;
//   // 
//  // int ans = (sizeof(arr)/sizeof(int)); 
//  //  cout<<ans<<endl;
//   cout<<arr.size()<<endl; 
//   cout<<arr.capacity()<<endl;// stores the total //element currently present in the vector..
//   //insert
//   arr.push_back(5);
//   arr.push_back(10);
// //print
//   for (int i=0;i<arr.size();i++){
//     cout<<arr[i]<<" "<<endl;
//   }
  
//   // remove 
//   arr.pop_back();
//    for (int i=0;i<arr.size();i++){
//      cout<<arr[i]<<" "<<endl;
//    }
 
//   //explicitly doing the array
//   int n;
//   cout<<"Enter the value of n"<<endl;
//   cin>>n;
//   vector<int>brr(n,-5);
//   cout<<"Size of brr: "<<brr.size()<<endl;
//   cout<<"capacity of brr: "<<brr.capacity()<<endl;

//   for(int i=0;i<brr.size();i++){
//     cout<<brr[i]<<" ";
    
//   }
//   cout<< endl;
  
//   vector<int>crr{10,20,30,40,50};
//    for (int i=0;i<crr.size();i++){
//      cout<<crr[i]<<endl;
//    }
  
//   cout<<"IS CRR EMpty: "<<crr.empty();

  // unique element Q:

 //  int n;
 //  cout<<"enter the size"<<endl;
 //  cin>>n;

 //  vector<int>arr(n);
 //  cout<<"Enter the element"<<endl;
 //  for(int i=0;i<arr.size();i++){
 
 //    cin>>arr[i];
 //  }

 //  int uniqueElement = xorarr(arr);
  
 // cout<<"Ans is: "<< uniqueElement<<endl;

//  union of 2 array:
//   int arr[]={2,3,4,5,6};
//   int sizea=5;
//   int brr[]={1,5,8,9,10,11};
//    int sizeb = 6;
//   vector<int>ans;
//   //push all element of vector arr
//   for(int i=0;i<sizea;i++)
//   {
//     ans.push_back(arr[i]);
//   }
//   // push all eleemt for brr
//   for(int i=0;i<sizeb;i++){
//     ans.push_back(brr[i]);
//   }
// // print ans
//   for(int i=0;i<ans.size();i++){
//     cout<<ans[i]<<" ";
//   }
//   cout<<endl;
  
 // intersection Q:
//   vector<int> arr{1,3,3,4,5,6,7};
//   vector<int> brr{3,3,5,8,9,7};
  
//   vector<int> sol;
  
//  // outer loop on arr vector
//   for(int i=0;i<arr.size();i++){
//     int element = arr[i];
//     // for every element, run loop on brr
//     for(int j=0;j<brr.size();j++){
//       if(element == brr[j]){
//         // mark
//          brr[j]=-1;
//         sol.push_back(element);
//       }
//     }
//   }

// // print solution

//   for(int i=0;i<sol.size();i++){
//     cout<< sol[i]<<" ";
//   }

  //  int arr[]={2,3,4,5,6};
  //   int sizea=5;
  //   int brr[]={1,5,8,6,10,11};
  //    int sizeb = 6;
  //   vector<int>ans;
  //   //push all element of vector arr
  //   for(int i=0;i<sizea;i++)
  //   {
  //     ans.push_back(arr[i]);
  //   }
  //   // push all eleemt for brr
  //   for(int i=0;i<sizeb;i++){
  //     brr[i]=-1;
  //     ans.push_back(brr[i]);
  //   }
  //    for(int i=0;i<sizea;i++){
  //       int element = arr[i];
  //       // for every element, run loop on brr
  //       for(int j=0;j<sizeb;j++){
  //         if(element == brr[j]){
  //           // mark
            
  //          ans.push_back(element);
  //            brr[j]=-1;
  //         }
  //       }
  //     }

  // // print ans
  //   for(int i=0;i<ans.size();i++){
  //    if (ans [i] != -1){
  //      cout<< ans[i]<<" ";
  //    }

//   return 0;

 //Pair sum Q::
// vector<int >arr{10,20,30,40,50,60};
//   int sum = 80;
//   // printing all pairs
//   // outer loop will traverse for each element
//   for(int i=0;i<arr.size();i++){
//     int element = arr[i];

//     // innner loop aage wale ka??
//     for(int j=i+1;j<arr.size();j++){
//       if(element + arr[j] == sum){
//        cout<<"Sum is:"<<element<<" "<<arr[j]<<endl;
//       }
    
//     }
//   }
 
  
// triplet sum Q:
// vector<int > arr{0,10,20,30,40,50,60,80,90};
//   int sum = 80;
//   // 
//   for(int i=0;i<arr.size();i++){
//     int element1 = arr[i];
//     for(int j=i+1;j<arr.size();j++){
//       int element2= arr[j];
//       for(int k=j+1;k<arr.size();k++){
//             int   element3= arr[k];
//           for(int p=k+1;p<arr.size();p++){
//              if (element1+element2+element3+arr[k]== sum){
//              cout<<"Triplet is :"<<element1<<" "<<element2<<" "<<element3<<" "<<arr[p]<<" "<<endl;
//           }
//         }
//       }
//     }
//   }

 //sort 0 and 1Q:

  vector<int> arr{0,1,0,1,0,0,1,1,0,1,1,1,1,0};
  int start =0;
  int end = arr.size()-1;
  int i = 0;

   while(i< end){
     if(arr[i]==0){
       //swap left
       swap(arr[start],arr[i]);
             i++;
             start++;
       
     }
     if (arr[i]==1){
       // swap right -> end
       swap(arr[i],arr[end]);
       end--;
       
     }
   }
   // print
  for (auto values:arr){
    cout<< values<<" ";
  } 
  
     return 0;
  
  }
