#include <iostream>
#include<limits.h>
using namespace std;

void printArray(int arr[],int size){
  for (int i=0;i<size;i++){
    cout<< arr[i]<<" ";
  }
  cout<< endl;
}
 // present -> true;
// absent -> false;
bool linearSearch(int arr[],int size,int target){
  for (int i=0;i<size;i++){
    if  (arr[i]== target){
      return true;
    }
  }
  // not found
  return false;
}

void countZero(int arr[],int n){
  int zeroCount = 0;
  int onecount =0;
  for (int i=0;i<n;i++){
    if (arr[i]==0){
      zeroCount++;
      
    }
    if (arr[i]==1){
      onecount++;
    }
  }
   cout<<"Zero Count: "<<zeroCount<<endl;
  cout<<"One Count: "<<onecount<<endl;
}

int findminAns(int arr[],int n){
  // ans store
  int minAns=INT_MAX;
  for (int i=0;i<n;i++){
    if (arr[i]<minAns){
      minAns=arr[i];
    }
  }
  return minAns;
}

void reverArray(int arr[],int n){
  // int left=0;
  // int right = n-1;
  // while(left <= right){
  //   swap(arr[left],arr[right]);
  //     left++;
  //   right--;
  // }
 for (int left = 0, right = n-1 ; left<= right ; left++ , right--){
   swap(arr[left], arr[right]);
 }
  // print array 
  for (int i=0;i<n;i++){
    cout<<arr[i]<<" ";
  }
}

int main() {
  //array creation
 //  int arr[25];
 // short snum[55];
 //  char ch[26];
 //  bool flags[226];
 //  cout<<"Array succesfull"<<endl;

 //  int a=5; 
 //  cout<<"Size of a: "<< sizeof(a)<<endl;
 // //cout<<"address of a: "<<&a<<endl;
 //  int arr[10];
 //  //cout<<"Base address of arr: "<<&arr<<endl;
 //  //cout<<"Base address of arr: "<<arr<<endl;
 // cout<<"Size of array: "<<sizeof(arr)<<endl;
  // array initilization

  // int arr[]={2,3,4,5,6};
  // int brr[5]={2,3,4,5,6};
  // int crr[5]={1,2};
  // //error 
  // int drr[2]={1,2,25,6,5};
 //  int arr[5]={1,2,3,4,5};
 //  int n=5;
 // for (int i=0;i<  n;i++){
 //    cout<<arr[i]<<" ";
 // }
 //  // cout<<"Array at index 2 is: "<<arr[2]<<endl;
 //  // cout<<arr[0]<<endl;
//taking input in array
  // int arr[5]={};
  //  int n=5;
  // for (int i=0;i<n;i++){
  //   cout<<"Enter the value at index: "<<i<<" ";
  //   cin>>arr[i];
  //   cout<<endl;
    
  // }
  // //printing input in array
  // cout<<"Printing the values in array: "<<endl;
  // for (int i=0;i<n;i++){
  //   cout<<arr[i]<<" ";
  // }
  // problem 1:::
//   int arr[10]={};
//   int n=10;
//   for (int i=0;i<n;i++)
//   {
//     cout<<"Enter the value at index: "<<i<<" ";
//     cin>>arr[i];
//   }
//   // printing
// for (int i=0;i<n;i++){
 
//   cout<<2*arr[i]<<" ";
// }

  // problem 2::
//   int arr[5];
//    int n=5;
//   for(int i=0;i<n;i++){
//     cin>>arr[i];
//   }

//   // sum 
//   int sum=0;
// for (int i=0;i<n;i++){
//   sum =sum+arr[i];
 
// }
//   cout<<"Printing sum"<<endl;
//   cout<< sum<<endl; 

  // linear search  method 1:::
  // int arr[5]={2,4,6,8,10};
  // int n=5;
  // int target=62;
  // for (int i=0;i<n;i++){
  //   if(arr[i]==target){
  //     cout<<"Target found: "<<endl;
      
  //     break;
  //   }
    
  // }
  // cout<<"Target not found"<<endl;
 //Method 2::
 //  int arr[5]={2,3,4,5,6};
 //  int n=5;
 //  int target=4;
 // bool flag=0;
 //  //0 -> not found
 //  //1 -> found

 //  for (int i=0;i<n;i++){
 //    if (arr[i]== target){
 //      flag=1;
 //      break;
 //    }
 //  }

 //  if (flag==1){
 //    cout<< "Target found"<<endl;
 //  }
 //  else{
 //    cout<<"Target not found"<<endl;
 //  }

// Arrays and functions
  // function is in top of main
//   int arr[5]={1,2,4,5,6};
  
//   int size =5;
//   int target=24;
//  bool ans= linearSearch(arr,size,target);

//   if (ans==1){
//     cout<<"Found"<<endl;
//   }
//   else{
//     cout<< "Not found"<<endl;
//   }
//   // function call
// //  printArray(arr,size);  


  /// finding zero and ones in an array
  // int arr[]={1,0,0,0,1,0,1,1,1};
  // int n=9;
  // countZero (arr,n);


  // finding min in an array
  // cout<<INT_MIN<<endl;
  // cout<<INT_MAX <<endl;

//   int arr[]={22,56,-556,89,2,5};
//   int n=6;
//   int min=findminAns(arr,n);
// cout<<"Min number is: "<<min<<endl;    
  

  // Reverse an Array


// even size array
  int arr[6]={10,20,30,40,50,60};
  int n=6;
  reverArray(arr,n);

  
  return 0;



}
