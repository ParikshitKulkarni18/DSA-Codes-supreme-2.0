#include <iostream>
using namespace std;
#include<limits.h>

void printArray(int arr[],int size,int index){
// base case
  if (index >= size){
    return ;
  }
  // processing 
  // jis index par khada hoo use print karo
  cout<<arr[index]<<endl;
// recursive call karo
  printArray(arr,size,index+1);


  // if we want to print in reverse order
  //   cout<<arr[index]<<endl;
  
}

bool  SearchArray(int arr[],int size,int target ,int index){
// base case
  if(index >= size){
    return false;
  }
  // if current element is target 
if(arr[index] == target){
  return true;
}

  // recursive call
  bool finalAns = SearchArray(arr,size,target,index+1);
  return finalAns;
}
// mini pass kiya taki usme store kar pao ans ko
// herer we have to pass mini by reference as so that we do not create copy and store directly in it.
void findMin(int arr[],int size,int index,int &mini){
  // base case
  if (index >= size){
    return;
  }

  // processing
  mini = min(mini,arr[index]);

  // recursive call
  findMin(arr,size,index+1,mini);
}

// solve function stores even number into vector
void solve(int arr[],int size,int index,vector<int> &ans){
// base case
  if (index >= size){
    return ;
  }
  // processing
  if (arr[index]% 2 == 0){
    ans.push_back(arr[index]);
  }
// recursive call
  solve(arr,size,index+1,ans);

  
}

void doublearray(int arr[],int size,int index){
  if (index >= size){
    return ;
  }
  // processing
  arr[index] = arr[index]*2;
  // recursive call
  doublearray(arr,size,index+1);

  
}


void printDigit(int num,vector<int>&ans){
  // base case 
  if (num == 0 ){
    return;
  }
  // processing
  int digit = num %10;
  // update number
  num = num /10;
  // recursive call
  //updated number hee
  printDigit(num,ans);

  // jab recursive call se vapas aarahe huu toh print karo
  // procesing
  //cout<< digit<< endl;
  ans.push_back(digit);
  
}

int main() {
 
int arr[]={10,20,30,40,50};
  int size=5;
  int index =0;
  int mini = INT_MAX;
  //printArray(arr,size,index);
//int target = 50;
  //cout<<"Target Found or not: "<< SearchArray(arr,size,target,index)<<" "<<endl;
 findMin(arr,size,index,mini);
  cout<<"Minimum number is: "<<mini<<endl;


// int arr[ ] = {11,20,31,40,50};
//   int size = 5;
//   int index =0;

//vector<int> ans;
  
// solve(arr,size,index,ans);
//   // print vector
// for(int nums : ans){
//   cout<<nums << " ";
// }
 // doublearray(arr, size, index);
 //  for(int i=0;i<size;i++){
 //    cout<<arr[i]<<" ";
 //  }


  // if vector me store kar na hee
int num = 4217;
  vector<int> ans;
  printDigit(num,ans);
  // print vector
  for(int num: ans){
    cout<<num<<endl;
  }
  return 0;
  
}
